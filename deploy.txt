# In the AWS console, ensure you have the region set to Ireland (eu-west-1)

# DEBUG LOG everything, every failure, and every success, and every action like a running commentary, otherwise you're headed for a trail of tears

# Make sure to talk to your TP rep and get an initial hello world skeleton docker uploaded to your repo, it should be working.

# NOTE - THE RDS IN ALL ENVIRONMENTS GETS SHUTDOWN AFTER 6PM, service has to be restarted if you're working after this time, takes 3-5 mins to start 

# get all your environment variables with proper values to you TP guy, e.g. LAMBDA_MESSAGE (this will get the message from lambda), RDS_SECRET -> secret manager secret name for shared RDS, e.g. iflightneointdevrds is the secret name for shared RDS, but you can also use ARN (it worked for me) and use the login/password/host/port etc from the secret etc and similarly other vars. No need for local vars in docker file, use local .env files (do not check them into github) for local docker testing

# create folder in any S3 bucket and upload code there. note name of s3 bucket, just create a folder called interfacenumber_code and copy your ROOT contents of your project folder in there e.g.

311_code
  src
requirements.txt
errorpropeties.txt
Dockerfile 
<etc>
 
# go to cloudshell and execute following commands. You can get them from ECS -> Repositories (See left hand side panel) -> Private Repositories (main panel) -> search for your interface e.g. 311 using filter search bar -> click on your service e.g. carmen-pac-stf-311-service (Will have service at the end) -> you should be here: Amazon ECR | Private registry | Repositories | carmen-pac-stf-311-service -> click the "View PUSH commands" button -> copy commands -> execute commands similar to how I have them below:


aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 730335227492.dkr.ecr.eu-west-1.amazonaws.com

aws s3 cp s3://s3b-stf-iflightneo-output-error-311-dev-euwe1-01/311_code . --recursive

# will show a message like this:
"WARNING! Your password will be stored unencrypted in /home/cloudshell-user/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store"


docker build -t carmen-pac-stf-311-service .

docker tag carmen-pac-stf-311-service:latest 730335227492.dkr.ecr.eu-west-1.amazonaws.com/carmen-pac-stf-311-service:latest

docker push 730335227492.dkr.ecr.eu-west-1.amazonaws.com/carmen-pac-stf-311-service:latest

# At this point, check the deployments tab of your service clusters->shared->ecs-iflightneoint-dev-euwe1-apps-shared->Services->your interface service -> deployments, check the logs, it should turn green after a while

# check cloudwatch for any issues
# (search AWS services at top of AWS console and select ECS) -> you should then be here: 
Amazon Elastic Container Service > Clusters > ecs-iflightneoint-dev-euwe1-apps-shared > Services > ecs-ser-iflightneoint-dev-euwe1-stf-311 (obviously select your own ECS service here) > Health -> Select Logs -> Click 'View in Cloudwatch' button -> much better logs visibility 